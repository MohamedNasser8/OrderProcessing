{
  "openapi": "3.0.3",
  "info": {
    "title": " Order  ",
    "contact": {
      "email": "nassermohamed3222@gmail.com"
    },

    "version": "1.0.11"
  },

  "tags": [

    {
      "name": "order",
      "description": "Access to store products",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Returns products available in the store",
        "description": "Returns a map of status codes to quantities",
        "operationId": "getProducts",
         "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "products": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "price": {
                              "type": "number"
                            },
                            "stock": {
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "price",
                            "stock"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/products/add": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Place product",
        "description": "Place a new product in the store for admin only",
        "operationId": "placeProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
           "201": {
        "description": "Product created successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "product": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "stock": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "price",
                    "stock"
                  ]
                }
              },
              "required": [
                "message",
                "product"
              ]
            }
          }
        }
           },
          "400": {
            "description": "Invalid input"
          },
         "500": {
      "description": "Internal Server Error",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "type": "string"
              }
            }
          }
        }
      }
    }
        }
      }
    },
    "/prodcut/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Purchase an order",
        "operationId": "purchaseOrder",
         "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Card"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Card"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Insufficient stock for product id"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "409": {
            "description": "Email already exist."
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": " \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp etc...\""
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "stock": {
                  "type": "integer"
                },
                "price": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "stock",
                "price"
              ],
              "example": {
                "name": "Iphone",
                "stock": 100,
                "price": 10
              }
            },
      "Payment": {
        "type": "object",
        "properties": {
          "paid": {
            "type": "boolean"
          },
          "payment_intent": {
            "type": "object",
            "nullable": true
          },
          "payment_method": {
            "type": "string"
          },
          "payment_method_details": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "card": {
                "type": "object",
                "allOf": [
                  {
                  }
                ]
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Card": {
  "type": "object",
  "properties": {
    "items": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "quantity"
        ]
      }
    },
    "stripeToken": {
      "type": "string"
    },
    "email": {
      "type": "string",
      "format": "email"
    }
  },
  "required": [
    "items",
    "stripeToken",
    "email"
  ]
},
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}